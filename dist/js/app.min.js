/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./dist/js/app.js":
/*!************************!*\
  !*** ./dist/js/app.js ***!
  \************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// Общие функции\r\nconst debounce = (func, delay = 100) => {\r\n  let timeoutId;\r\n  return (...args) => {\r\n    clearTimeout(timeoutId);\r\n    timeoutId = setTimeout(() => func.apply(undefined, args), delay);\r\n  };\r\n};\r\nconst toggleClass = (element, className, condition) => {\r\n  condition ? element.classList.add(className) : element.classList.remove(className);\r\n};\r\n\r\n// GSAP \r\ngsap.registerPlugin(ScrollTrigger);\r\n\r\nfunction initBenefitsAnimation() {\r\n  const benefitsSection = document.querySelector(\"#benefits\");\r\n  if (!benefitsSection) return;\r\n\r\n  const pinWrap = benefitsSection.querySelector(\".pin-wrap\");\r\n  const cardImages = benefitsSection.querySelectorAll(\".benefits-card__img\");\r\n\r\n  // Анимация для всего блока (горизонтальный параллакс)\r\n  gsap.to(pinWrap, {\r\n    x: \"-35%\", // Сдвигаем блок влево на 35%\r\n    ease: \"none\",\r\n    scrollTrigger: {\r\n      trigger: benefitsSection,\r\n      start: \"top 12%\",\r\n      end: \"+=2000\", // Увеличиваем область прокрутки для анимации\r\n      scrub: 1, \r\n      pin: true,\r\n      markers: false\r\n    }\r\n  });\r\n\r\n  // Анимация для иконок (сдвиг вправо для создания глубины)\r\n  cardImages.forEach((img) => {\r\n    gsap.fromTo(img,\r\n      { x: 0 },\r\n      {\r\n        x: 30,\r\n        ease: \"none\",\r\n        scrollTrigger: {\r\n          trigger: img,\r\n          start: \"top bottom\",\r\n          end: \"bottom top\",\r\n          scrub: 0.5,\r\n        }\r\n      }\r\n    );\r\n  });\r\n}\r\n\r\nwindow.addEventListener(\"load\", function () {\r\n  const lang = document.documentElement.lang || 'en';\r\n  const header = document.querySelector(\"header\");\r\n  const isDesktop = window.innerWidth >= 981;\r\n  \r\n  // Обработчик скролла\r\n  const handleScroll = () => {\r\n    toggleClass(header, \"scroll\", window.scrollY > 0);\r\n  };\r\n\r\n  handleScroll();\r\n\r\n  // socials\r\n\r\n  const socials = document.querySelector('.hero__socials');\r\n\r\n  if(socials) {\r\n    socials.addEventListener('click', () => {\r\n      socials.classList.toggle('active');\r\n    })\r\n  }\r\n\r\n  // Menu\r\n  const link = document.querySelector(\".header__burger\");\r\n  const menu = document.querySelector(\".header__nav\");\r\n  \r\n  if (menu) {\r\n    link.addEventListener(\"click\", () => {\r\n      link.classList.toggle(\"active\");\r\n      menu.classList.toggle(\"open\");\r\n    });\r\n  }\r\n\r\n  // Password\r\n  document.querySelectorAll('.toggle-password').forEach(button => {\r\n    button.addEventListener('click', () => {\r\n      const label = button.closest('label');\r\n      const input = label.querySelector('input');\r\n      const isPassword = input.type === 'password';\r\n      \r\n      input.type = isPassword ? 'text' : 'password';\r\n      button.classList.toggle('visible', isPassword);\r\n    });\r\n  });\r\n\r\n  // Phone\r\n  [].forEach.call( document.querySelectorAll('input[type=\"tel\"]'), function(input) {\r\n    var keyCode;\r\n    function mask(event) {\r\n        event.keyCode && (keyCode = event.keyCode);\r\n        var pos = this.selectionStart;\r\n        if (pos < 3) event.preventDefault();\r\n        var matrix = \"+7 (___) ___ ____\",\r\n            i = 0,\r\n            def = matrix.replace(/\\D/g, \"\"),\r\n            val = this.value.replace(/\\D/g, \"\"),\r\n            new_value = matrix.replace(/[_\\d]/g, function(a) {\r\n                return i < val.length ? val.charAt(i++) || def.charAt(i) : a\r\n            });\r\n        i = new_value.indexOf(\"_\");\r\n        if (i != -1) {\r\n            i < 5 && (i = 3);\r\n            new_value = new_value.slice(0, i)\r\n        }\r\n        var reg = matrix.substring(0, this.value.length).replace(/_+/g,\r\n            function(a) {\r\n                return \"\\\\d{1,\" + a.length + \"}\"\r\n            }).replace(/[+()]/g, \"\\\\$&\");\r\n        reg = new RegExp(\"^\" + reg + \"$\");\r\n        if (!reg.test(this.value) || this.value.length < 5 || keyCode > 47 && keyCode < 58) this.value = new_value;\r\n        if (event.type == \"blur\" && this.value.length < 5)  this.value = \"\"\r\n    }\r\n\r\n    input.addEventListener(\"input\", mask, false);\r\n    input.addEventListener(\"focus\", mask, false);\r\n    input.addEventListener(\"blur\", mask, false);\r\n    input.addEventListener(\"keydown\", mask, false);\r\n  });\r\n\r\n\r\n  // Валидация формы\r\n  const cabinetForm = document.querySelector('.cabinet__form');\r\n\r\n  if(cabinetForm) {\r\n    const saveBtn = cabinetForm.querySelector('.cabinet__button.save');\r\n    const cancelBtn = cabinetForm.querySelector('.cabinet__button.cancel');\r\n    const modalBtn = cabinetForm.querySelector('.modal__button');\r\n    const inputs = Array.from(cabinetForm.querySelectorAll('input'));\r\n    const initialValues = new Map(inputs.map(input => [input.id, input.value]));\r\n\r\n    const validatePassword = (password) => {\r\n      return /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*()_+[\\]{};':\"\\\\|,.<>/?-]).{8,}$/.test(password);\r\n    };\r\n\r\n    const checkLengthMismatch = (inputElement) => {\r\n      if (inputElement.type !== 'text') return '';\r\n      const valueLength = inputElement.value.trim().length;\r\n      return valueLength < inputElement.minLength \r\n        ? `${inputElement.dataset.errorMessage} ${inputElement.minLength}`\r\n        : '';\r\n    };\r\n\r\n    const toggleErrorSpan = (inputElement, errorMessage = '') => {\r\n      const errorElement = document.querySelector(`#${inputElement.id}-error`);\r\n      toggleClass(inputElement, 'invalid', !!errorMessage);\r\n      toggleClass(errorElement, 'invalid', !!errorMessage);\r\n      errorElement.textContent = errorMessage;\r\n    };\r\n\r\n    const checkInputValidity = (inputElement) => {\r\n      if (inputElement.id === 'sum') {\r\n        const rawValue = inputElement.value.replace(/\\s/g, '');\r\n        const numericValue = parseInt(rawValue, 10);\r\n        const minValue = parseInt(inputElement.dataset.min, 10);\r\n        \r\n        inputElement.setCustomValidity(\r\n          isNaN(numericValue) || numericValue < minValue \r\n            ? inputElement.dataset.errorMessage \r\n            : ''\r\n        );\r\n      } \r\n      else if (inputElement.validity.patternMismatch) {\r\n        inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n      } \r\n      else {\r\n        inputElement.setCustomValidity(checkLengthMismatch(inputElement));\r\n      }\r\n\r\n      // Проверки паролей\r\n      const passwordOld = document.getElementById('password-old');\r\n      const passwordNew = document.getElementById('password-new');\r\n      const passwordRepeat = document.getElementById('password-repeat');\r\n\r\n      if (inputElement.id === 'password-old' && !validatePassword(inputElement.value)) {\r\n        inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n      }\r\n      \r\n      if (inputElement.id === 'password-new') {\r\n        if (!validatePassword(inputElement.value)) {\r\n          inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n        } else if (inputElement.value === passwordOld?.value) {\r\n          inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n        } else {\r\n          inputElement.setCustomValidity('');\r\n        }\r\n      }\r\n\r\n      if (inputElement.id === 'password-repeat' && inputElement.value !== passwordNew?.value) {\r\n        inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n      }\r\n\r\n      toggleErrorSpan(inputElement, inputElement.validationMessage);\r\n    };\r\n\r\n    const hasInvalidInput = () => inputs.some(input => !input.validity.valid);\r\n    const isFormChanged = () => inputs.some(input => input.value !== initialValues.get(input.id));\r\n\r\n    const toggleButton = () => {\r\n      const changed = isFormChanged();\r\n      if (cancelBtn) cancelBtn.disabled = !changed;\r\n      if (saveBtn) saveBtn.disabled = !changed || hasInvalidInput();\r\n      if (modalBtn) modalBtn.disabled = !changed || hasInvalidInput();\r\n    };\r\n\r\n    const formError = () => {\r\n      inputs.forEach(input => {\r\n        toggleClass(input, 'invalid', input.required && input.value.trim() === '');\r\n      });\r\n    };\r\n\r\n    // Инициализация валидации\r\n    cabinetForm.addEventListener('submit', (e) => {\r\n      if (hasInvalidInput()) {\r\n        e.preventDefault();\r\n        formError();\r\n      } else if (!cabinetForm.classList.contains('modal__form')) {\r\n        e.preventDefault();\r\n        inputs.forEach(input => initialValues.set(input.id, input.value));\r\n        toggleButton();\r\n      } else {\r\n        toggleButton();\r\n      }\r\n    });\r\n\r\n    inputs.forEach(input => {\r\n      input.addEventListener('input', () => {\r\n        checkInputValidity(input);\r\n        toggleButton();\r\n      });\r\n    });\r\n\r\n    if (cancelBtn) {\r\n      cancelBtn.addEventListener('click', (e) => {\r\n        e.preventDefault();\r\n        inputs.forEach(input => {\r\n          input.value = initialValues.get(input.id);\r\n          toggleErrorSpan(input);\r\n        });\r\n        toggleButton();\r\n      });\r\n    }\r\n  }\r\n\r\n  // Анимации\r\n  const { animate } = Motion;\r\n  const animateElements = (selector, props, options) => {\r\n    document.querySelectorAll(selector).forEach(el => {\r\n      animate(el, props, {\r\n        duration: 1,\r\n        delay: parseFloat(el.dataset.delay || \"0\"),\r\n        easing: \"ease-out\",\r\n        ...options\r\n      });\r\n    });\r\n  };\r\n\r\n  animateElements(\".fade-in\", { \r\n    opacity: [0, 1], \r\n    transform: [\"translateY(50px)\", \"translateY(0)\"] \r\n  });\r\n\r\n  animateElements(\".fade-down\", { \r\n    opacity: [0, 1], \r\n    transform: [\"translateY(-50px)\", \"translateY(0)\"] \r\n  });\r\n\r\n  const observer = new IntersectionObserver(entries => {\r\n    entries.forEach(entry => {\r\n      if (entry.isIntersecting) {\r\n        animate(entry.target, { \r\n          opacity: 1, \r\n          transform: \"translateY(0)\" \r\n        }, { \r\n          duration: 0.8, \r\n          easing: \"ease-out\" \r\n        });\r\n        observer.unobserve(entry.target);\r\n      }\r\n    });\r\n  }, { threshold: 0.2 });\r\n\r\n  document.querySelectorAll(\".scroll-fade-in\").forEach(observer.observe.bind(observer));\r\n\r\n  // Календарь\r\n  document.querySelectorAll(\".calendar__date\").forEach(el => {\r\n    if (!el.dataset.width) return;\r\n    \r\n    el.style.width = '0%';\r\n    animate(el, { \r\n      width: `${el.dataset.width}%` \r\n    }, { \r\n      duration: 1, \r\n      delay: 0.3, \r\n      easing: 'linear' \r\n    });\r\n  });\r\n\r\n  // Формы\r\n  document.querySelector('.search-form')?.addEventListener('submit', e => e.preventDefault());\r\n\r\n  // Фильтры\r\n  const Filterform = document.getElementById(\"form-filter\");\r\n  const resetBtn = document.querySelector(\".filter__reset\");\r\n\r\n  document.querySelectorAll(\".filter__heading .button\").forEach(clearBtn => {\r\n    clearBtn.addEventListener(\"click\", () => {\r\n      const filterRow = clearBtn.closest(\".filter__row\");\r\n      \r\n      filterRow.querySelectorAll(\"input\").forEach(input => input.value = \"\");\r\n      filterRow.querySelectorAll(\"select\").forEach(select => select.selectedIndex = 0);\r\n    });\r\n  });\r\n\r\n  resetBtn?.addEventListener(\"click\", () => Filterform.reset());\r\n\r\n  // Поиск по таблице\r\n  const search = document.querySelector('#search');\r\n  const searchTable = document.querySelector('.table-search');\r\n\r\n  if(search && searchTable) {\r\n    const filterTable = debounce(() => {\r\n      const filter = search.value.toUpperCase();\r\n      const rows = searchTable.querySelectorAll('.table__body .table__row');\r\n      \r\n      rows.forEach(row => {\r\n        const cells = row.getElementsByTagName(\"div\");\r\n        const match = Array.from(cells).some(cell => \r\n          cell.textContent.toUpperCase().includes(filter)\r\n        );\r\n        \r\n        toggleClass(row, \"hide\", !match);\r\n      });\r\n    });\r\n\r\n    search.addEventListener(\"input\", filterTable);\r\n  }\r\n\r\n  // Показать еще\r\n  const showMore = document.querySelector('.cabinet__button.show');\r\n  const ShowPerClick = 2;\r\n\r\n  if(showMore) {\r\n    showMore.addEventListener('click', function () {\r\n      const rows = document.querySelectorAll('.cabinet__wrap .hidden');\r\n      \r\n      if (rows.length === 0) {\r\n        showMore.style.display = 'none';\r\n        return;\r\n      }\r\n\r\n      Array.from(rows)\r\n        .slice(0, ShowPerClick)\r\n        .forEach(row => row.classList.remove('hidden'));\r\n        \r\n      if (!document.querySelector('.cabinet__wrap .hidden')) {\r\n        showMore.style.display = 'none';\r\n      }\r\n    });\r\n  }\r\n\r\n  // Количество материалов\r\n  const materialsRows = document.querySelectorAll('.table-materials .table__row');\r\n  const totalAmount = document.querySelector('.cabinet__amount span');\r\n\r\n  if(materialsRows) {\r\n    const updateTotal = () => {\r\n      let sum = 0;\r\n      \r\n      materialsRows.forEach(row => {\r\n        const countEl = row.querySelector('.table__quantity span');\r\n        const count = parseInt(countEl.textContent, 10);\r\n        sum += count;\r\n        toggleClass(row, 'active', count > 0);\r\n      });\r\n\r\n      if(totalAmount) totalAmount.textContent = sum;\r\n    };\r\n\r\n    materialsRows.forEach(row => {\r\n      const minusBtn = row.querySelector('.button.minus');\r\n      const plusBtn = row.querySelector('.button.plus');\r\n      const countEl = row.querySelector('.table__quantity span');\r\n\r\n      const updateCount = (change) => {\r\n        let value = parseInt(countEl.textContent, 10) + change;\r\n        if (value >= 0) {\r\n          countEl.textContent = value;\r\n          updateTotal();\r\n        }\r\n      };\r\n\r\n      minusBtn.addEventListener('click', () => updateCount(-1));\r\n      plusBtn.addEventListener('click', () => updateCount(1));\r\n    });\r\n    \r\n    updateTotal();\r\n  }\r\n\r\n  // Date pickers\r\n  const locales = {\r\n    en: flatpickr.l10ns.default,\r\n    ru: flatpickr.l10ns.ru,\r\n    kk: flatpickr.l10ns.kk\r\n  };\r\n\r\n  const locale = locales[lang] || flatpickr.l10ns.default;\r\n\r\n  const date = flatpickr(\".date\", {\r\n    dateFormat: \"d-m-Y\",\r\n    locale: locale,\r\n    maxDate: \"today\"\r\n  });\r\n\r\n  const fromPicker = flatpickr(\".fromDate\", {\r\n    dateFormat: \"d-m-Y\",\r\n    locale: locale,\r\n    maxDate: \"today\",\r\n    onChange: (selectedDates) => toPicker.set(\"minDate\", selectedDates[0])\r\n  });\r\n\r\n  const toPicker = flatpickr(\".toDate\", {\r\n    dateFormat: \"d-m-Y\",\r\n    locale: locale,\r\n    maxDate: \"today\",\r\n    onChange: (selectedDates) => fromPicker.set(\"maxDate\", selectedDates[0])\r\n  });\r\n\r\n  // Фильтр\r\n  const filterToggleBtn = document.querySelector('.cabinet__btn-filter');\r\n  const filterBlock = document.querySelector('.cabinet__filter');\r\n  const filterCloseBtn = document.querySelector('.filter__close');\r\n  const cabinetTable = document.querySelector('.cabinet__table');\r\n\r\n  if (filterToggleBtn && filterBlock && cabinetTable) {\r\n    filterToggleBtn.addEventListener('click', () => {\r\n      filterBlock.classList.toggle('active');\r\n      cabinetTable.style.zIndex = filterBlock.classList.contains('active') ? '-1' : '0';\r\n    });\r\n\r\n    filterCloseBtn?.addEventListener('click', () => {\r\n      filterBlock.classList.remove('active');\r\n      setTimeout(() => cabinetTable.style.zIndex = '0', 300);\r\n    });\r\n  }\r\n\r\n  // Аккордеон\r\n  document.querySelectorAll('.accordion__row').forEach(row => {\r\n    const head = row.querySelector('.accordion__head');\r\n    const body = row.querySelector('.accordion__body');\r\n    \r\n    head.addEventListener('click', function(e) {\r\n      if (e.target.closest('.accordion__download')) return;\r\n      \r\n      document.querySelectorAll('.accordion__row').forEach(otherRow => {\r\n        if (otherRow !== row) {\r\n          otherRow.classList.remove('active');\r\n          otherRow.querySelector('.accordion__body').style.maxHeight = '0';\r\n          otherRow.querySelector('.accordion__body').style.opacity = '0';\r\n        }\r\n      });\r\n      \r\n      if (row.classList.contains('active')) {\r\n        row.classList.remove('active');\r\n        body.style.maxHeight = '0';\r\n        body.style.opacity = '0';\r\n      } else {\r\n        row.classList.add('active');\r\n        body.style.maxHeight = body.scrollHeight + 'px';\r\n        body.style.opacity = '1';\r\n      }\r\n    });\r\n  });\r\n\r\n  // Swipers\r\n  const swipers = {\r\n    heroSwiper: {\r\n      direction: \"vertical\",\r\n      spaceBetween: 16,\r\n      loop: true,\r\n      autoplay: { \r\n        delay: 2500, \r\n        disableOnInteraction: false \r\n      },\r\n      pagination: { \r\n        el: \".hero-pagination\" \r\n      },\r\n      breakpoints: { \r\n        981: { \r\n          spaceBetween: 20 \r\n        } \r\n      }\r\n    },\r\n    priceSwiper: {\r\n      direction: 'horizontal',\r\n      slidesPerView: 1.1,\r\n      spaceBetween: 16,\r\n      autoplay: { \r\n        delay: 3000, \r\n        disableOnInteraction: false \r\n      },\r\n      breakpoints: { \r\n        981: { \r\n          slidesPerView: 4, \r\n          spaceBetween: 24 \r\n        } \r\n      }\r\n    },\r\n    newsSwiper: {\r\n      direction: 'horizontal',\r\n      slidesPerView: 1.1,\r\n      spaceBetween: 16,\r\n      loop: true,\r\n      autoplay: { \r\n        delay: 3500, \r\n        disableOnInteraction: false \r\n      },\r\n      breakpoints: { \r\n        981: { \r\n          slidesPerView: 2.8, \r\n          spaceBetween: 20 \r\n        } \r\n      }\r\n    },\r\n    teamsSwiper: {\r\n      slidesPerView: 1,\r\n      spaceBetween: 20,\r\n      // loop: true,\r\n      initialSlide: 2,\r\n      autoplay: { \r\n        delay: 3000, \r\n        disableOnInteraction: false \r\n      },\r\n      pagination: {\r\n        el: \".teams-pagination\",\r\n      },\r\n    }\r\n  };\r\n\r\n  Object.entries(swipers).forEach(([key, config]) => {\r\n    const el = document.querySelector(`.${key}`);\r\n    if (el) new Swiper(el, config);\r\n  });\r\n\r\n  const tabs = document.querySelector('.history-buttons .swiper-wrapper');\r\n\r\n  const tabButtons = new Swiper('.history-buttons', {\r\n    slidesPerView: 4,\r\n    breakpoints: { \r\n      981: { \r\n        slidesPerView: 11,\r\n      } \r\n    }\r\n  });\r\n\r\n  if(tabs) {\r\n    tabs.addEventListener('click', (event) => {\r\n      const target = event.target.closest('.swiper-slide');\r\n      if (target && !target.classList.contains('active-tab')) {\r\n        const activeTab = tabs.querySelector('.active-tab');\r\n        if (activeTab) activeTab.classList.remove('active-tab');\r\n        target.classList.add('active-tab');\r\n\r\n        const index = Array.from(tabs.children).indexOf(target);\r\n        tabContent.slideTo(index);\r\n      }\r\n    });\r\n  }\r\n\r\n  const tabContent = new Swiper('.history-content', {\r\n    slidesPerView: 1,\r\n  });\r\n\r\n  tabContent.on('slideChange', () => {\r\n    const previous = tabs.querySelector('.active-tab');\r\n    if (previous) previous.classList.remove('active-tab');\r\n\r\n    const newActive = tabs.children[tabContent.activeIndex];\r\n    if (newActive) newActive.classList.add('active-tab');\r\n  });\r\n\r\n  // about tabs\r\n\r\n  function initAboutTabs() {\r\n    document.querySelectorAll(\"[data-about]\").forEach(container => {\r\n        if (container.dataset.about === \"initilized\") return;\r\n\r\n        const buttons = Array.from(container.querySelectorAll(\"[data-about-button]\"));\r\n        const panes = Array.from(container.querySelectorAll(\"[data-about-pane]\"));\r\n        const select = container.querySelector(\"[data-about-select]\");\r\n\r\n        let activeButton = buttons.find(btn => btn.classList.contains(\"active\")) || buttons[Math.floor(buttons.length / 2)];\r\n        let activeKey = activeButton?.dataset.aboutButton;\r\n        let activePane = panes.find(pane => pane.dataset.aboutPane === activeKey);\r\n\r\n        function activateAbout(key) {\r\n            const newButton = buttons.find(btn => btn.dataset.aboutButton === key);\r\n            const newPane = panes.find(pane => pane.dataset.aboutPane === key);\r\n\r\n            activeButton?.classList.remove(\"active\");\r\n            newButton.classList.add(\"active\");\r\n            activeButton = newButton;\r\n\r\n            activePane?.classList.remove(\"active\");\r\n            newPane.classList.add(\"active\");\r\n            activePane = newPane;\r\n        }\r\n\r\n        buttons.forEach(btn => {\r\n            btn.addEventListener(\"click\", () => activateAbout(btn.dataset.aboutButton));\r\n        });\r\n\r\n        if (select) {\r\n          select.addEventListener(\"change\", () => {\r\n              activateAbout(select.value);\r\n          });\r\n        }\r\n\r\n        container.dataset.about = \"initilized\";\r\n    });\r\n  }\r\n\r\n  initAboutTabs();\r\n\r\n  // GSAP \r\n\r\n  if (isDesktop) {\r\n    initBenefitsAnimation();\r\n  } else {\r\n    new Swiper(\".benefitsSwiper\", {\r\n      pagination: {\r\n        el: \".benefits-pagination\",\r\n      },\r\n    });\r\n  }\r\n\r\n  const scrollTriggerConfig = {\r\n    start: \"top bottom\",\r\n    end: \"bottom 20%\",\r\n    anticipatePin: 1,\r\n    toggleActions: \"play none none reverse\",\r\n  };\r\n\r\n  gsap.utils.toArray(\".up\").forEach(element => {\r\n    gsap.fromTo(element,\r\n      { yPercent: 60, opacity: 0 },\r\n      {\r\n        duration: 1.2,\r\n        opacity: 1,\r\n        yPercent: 0,\r\n        ease: \"power2.out\",\r\n        scrollTrigger: { trigger: element, ...scrollTriggerConfig }\r\n      }\r\n    );\r\n  });\r\n  \r\n  // Animation\r\n\r\n  const images = document.querySelectorAll('.anim-img');\r\n\r\n  const imgObserver = new IntersectionObserver(entries => {\r\n    entries.forEach(entry => {\r\n      if (entry.isIntersecting) {\r\n        entry.target.classList.add('animate');\r\n        imgObserver.unobserve(entry.target); // однократное срабатывание\r\n      }\r\n    });\r\n  }, { threshold: 0.5 });\r\n\r\n  images.forEach(img => imgObserver.observe(img));\r\n\r\n  const revealObserver = new IntersectionObserver((entries, observer) => {\r\n    entries.forEach(entry => {\r\n      if (entry.isIntersecting) {\r\n        entry.target.classList.add('section-visible');\r\n        observer.unobserve(entry.target);\r\n      }\r\n    });\r\n  }, { threshold: 0.15 });\r\n\r\n  document.querySelectorAll('.section-hidden').forEach(el => revealObserver.observe(el));\r\n\r\n  // Modal\r\n\r\n  function hideModal(modal) {\r\n    modal.addEventListener('click', function(e) {\r\n      const target = e.target;\r\n      if (\r\n        target.classList.contains(\"modal__close\") ||\r\n        target.classList.contains(\"modals\") ||\r\n        target.classList.contains(\"close\")\r\n      ) {\r\n        modal.style.transition = \"opacity 0.4s\";\r\n        modal.style.opacity = \"0\";\r\n        setTimeout(() => {\r\n          modal.style.display = \"none\";\r\n        }, 400);\r\n      }\r\n    });\r\n  }\r\n\r\n  function showModal(modal) {\r\n    modal.style.display = \"flex\";\r\n    setTimeout(() => {\r\n      modal.style.transition = \"opacity 0.4s\";\r\n      modal.style.opacity = \"1\";\r\n    }, 10);\r\n  } \r\n\r\n  let modals = document.querySelector('.modals')\r\n  let modalAll = document.querySelectorAll('.modal')\r\n  let modalBtns = document.querySelectorAll(\".modal-btn\");\r\n\r\n  if(modals && modalBtns){\r\n    hideModal(modals);\r\n    modalBtns.forEach( btn => {\r\n      btn.addEventListener('click', () => {\r\n        showModal(modals)\r\n        let typeBtn = btn.dataset.type;\r\n        modalAll.forEach( modal => {\r\n          let typeModal = modal.dataset.type;\r\n          modal.style.display = 'none'\r\n          if(typeBtn == typeModal) {\r\n            modal.style.display = 'block'\r\n          }\r\n        });\r\n      })\r\n    })\r\n  }\r\n\r\n  // Работа с куки\r\n  \r\n  function setCookie(name, value, days) {\r\n    let expires = \"\";\r\n    if (days) {\r\n      let date = new Date();\r\n      date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));\r\n      expires = \"; expires=\" + date.toUTCString();\r\n    }\r\n    document.cookie = name + \"=\" + value + \"; path=/\" + expires;\r\n  }\r\n\r\n  function getCookie(name) {\r\n    let nameEQ = name + \"=\";\r\n    let ca = document.cookie.split(';');\r\n    for (let i = 0; i < ca.length; i++) {\r\n      let c = ca[i].trim();\r\n      if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  if (!getCookie(\"preloader_status\")) {\r\n    const preloader = document.querySelector('.preloader');\r\n    if(preloader) {\r\n      preloader.style.opacity = 1;\r\n      preloader.style.zIndex = 9;\r\n      preloader.classList.add('active');\r\n      setCookie(\"preloader_status\", \"1\", 1);\r\n    }\r\n\r\n  } else {\r\n    const preloader = document.querySelector('.preloader');\r\n\r\n    if (preloader) {\r\n      preloader.style.opacity = 0;\r\n      preloader.style.zIndex = -1;\r\n    }\r\n  }\r\n\r\n  // Глобальные обработчики\r\n  document.addEventListener(\"click\", (e) => {\r\n    if (!e.target.closest(\".header__nav\") && !e.target.closest(\".header__burger\") && !e.target.closest(\".header__search\")) {\r\n      link?.classList.remove(\"active\");\r\n      menu?.classList.remove(\"open\");\r\n    }\r\n  });\r\n\r\n  window.addEventListener(\"scroll\", () => {\r\n    handleScroll();\r\n    if (menu?.classList.contains(\"open\")) {\r\n      link?.classList.remove(\"active\");\r\n      menu?.classList.remove(\"open\");\r\n    }\r\n  });\r\n});\n\n//# sourceURL=webpack://gulp-2022/./dist/js/app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./dist/js/app.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;